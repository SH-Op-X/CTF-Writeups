import struct

b = [0x33, 0xC0, 0xC8, 0xA3, 0xF3, 0xBF, 0x1D, 0x1A, 0x3B, 0x41, 0xB7, 0xC6, 0xF1, 0x5E, 0x86, 0x52, 0x52, 0xCF, 0x6B, 0x1E, 0xC5, 0xF9, 0xCB, 0xBF, 0xED, 0x7B, 0x62, 0xF1, 0xF7, 0x43, 0x48, 0x54, 0xFB, 0x85, 0x4C, 0xD9, 0x35, 0x30, 0xF2, 0x6E]
b = list(struct.unpack("<10I", bytes(b)))
rand_list = [185, 173, 127, 3, 159, 15, 241, 103, 121, 183, 57, 221, 147, 136, 174, 234, 176, 61, 122, 7, 242, 137, 229, 52, 35, 85, 216, 78, 183, 218, 236, 113, 136, 108, 116, 39, 123, 101, 142, 245]
rand_list = list(struct.unpack("<10I", bytes(rand_list)))
input_list = []
for i in range(10):
    for j in range(32):
        bit = b[i] & 1
        if bit:
            b[i] ^= 0x85B6874F
        b[i] >>= 1
        if bit:
            b[i] |= 0x80000000
    input_list.append(b[i]^rand_list[i])
java_input = []
for i in input_list:
    while i:
        java_input.append(i&0xff)
        i >>= 8
print("".join(list(map(chr, java_input))))

s = [0xB82, 0xB83, 0xB9C, 0xB9D, 0xB9E, 0xB9F, 0xB98, 0xBA8, 0xBA9, 0xBAA, 0xBAB, 2980, 0xBA5, 0xBA6, 0xBA7, 0xBA0, 0xB84, 0xB85, 2950, 0xB87, 0xB80, 3001, 3002, 3005, 3006, 3007, 3000, 3011, 3003, 0xBB4, 0xBB5, 0xBB6, 0xB8D, 0xB8E, 0xBAD, 2990, 0xBAF, 0xB8F, 0xB88, 0xB89, 0xB8A, 0xB8B, 0xB81, 0xB99, 2970, 3034, 3035, 3028, 3029, 3015, 0xB9B, 0xB94, 0xB95, 0xB96, 3036, 3037, 3038, 0xBDF, 3032, 3033, 0xBA1, 0xBA2, 0xBA3, 3004]
for i in range(len(s)):
    s[i] ^= 3052
print("".join(map(chr, s)))
s1 = "HuqdOgqiMKPiWHFxFmPiW/M}I\\rfO.}fO.K|I/]|"
