n = pow(10, 18)-1
n1 = pow(n,2)%pow(2,64)
print(n1)
n2 = pow(n1,2)%pow(2,64)
print(n2)
n3 = (n1*n)%pow(2,64)
print(n3)
g = 10 * n + 5 * n1 + 2 * n2 + 5 * n3 + 11
g = g % pow(2,64)
print(g)
c_list, idx = [], []
c_list.append(chr(((g>>1)&0x1ff)^0x75))
idx.append(((g >> 41) & 0x1ff) ^ 0x110)
c_list.append(chr((((g >> 46) & 0x1ff) ^ 0x1c7)))
idx.append(((g >> 43) & 0x1ff) ^ 0x144)
c_list.append(chr((((g >> 9) & 0x1ff) ^ 0x69)))
idx.append(((g >> 36) & 0x1ff) ^ 0x131)
c_list.append(chr((((g >> 47) & 0x1ff) ^ 0x1a7)))
idx.append(((g >> 28) & 0x1ff) ^ 0x1e)
c_list.append(chr((((g >> 18) & 0x1ff) ^ 0x82)))
idx.append(((g >> 5) & 0x1ff) ^ 0xd2)
c_list.append(chr((((g >> 23) & 0x1ff) ^ 0x106)))
idx.append(((g >> 23) & 0x1ff) ^ 11)
c_list.append(chr((((g >> 46) & 0x1ff) ^ 0x1c5)))
idx.append(((g >> 28) & 0x1ff) ^ 0x2d)
c_list.append(chr((((g >> 54) & 0x1ff) ^ 0x2d)))
idx.append(((g >> 35) & 0x1ff) ^ 0x151)
c_list.append(chr((((g >> 51) & 0x1ff) ^ 0x6c)))
idx.append(((g >> 1) & 0x1ff) ^ 0x68)
c_list.append(chr((((g >> 39) & 0x1ff) ^ 0xf)))
idx.append(((g >> 52) & 0x1ff) ^ 0x1f0)
c_list.append(chr((((g >> 30) & 0x1ff) ^ 0x16)))
idx.append(((g >> 43) & 0x1ff) ^ 0x1ff)
c_list.append(chr((((g >> 46) & 0x1ff) ^ 0x1c4)))
idx.append(((g >> 41) & 0x1ff) ^ 0xbb)
c_list.append(chr((((g >> 23) & 0x1ff) ^ 0x142)))
idx.append(((g >> 19) & 0x1ff) ^ 0x16a)
c_list.append(chr((((g >> 11) & 0x1ff) ^ 0x1ec)))
idx.append(((g >> 52) & 0x1ff) ^ 0x199)
c_list.append(chr((((g >> 46) & 0x1ff) ^ 0x18d)))
idx.append(((g >> 24) & 0x1ff) ^ 0xa8)
print(c_list)
print(idx)
dict = zip(c_list, idx)
flag = "LITCTF{"
for item in sorted(list(dict), key=(lambda x:x[1])):
    flag += item[0]
print(flag)