# p = 93202687891394085633786409619308940289806301885603002539703165565954917915237
# a = 619398863196797048716428124691975702784687120972413594924940810635907737556
# b = 80546187587527518012258369984400999843218609481640396827119274116524742672463
# k = 58946963503925758614502522844777257459612909354227999110879446485128547020161
# E = EllipticCurve(GF(p),[a,b])
# c1 = E([40485287784577105052142632380297282223290388901294496494726004092953216846111,81688798450940847410572480357702533480504451191937977779652402489509511335169])
# c2 = E([51588540344302003527882762117190244240363885481651104291377049503085003152858, 77333747801859674540077067783932976850711668089918703995609977466893496793359])
# cipher_left = 34210996654599605871773958201517275601830496965429751344560373676881990711573
# cipher_right = 62166121351090454316858010748966403510891793374784456622783974987056684617905
# m = c1 - k * c2
# left = cipher_left//m[0]
# right = cipher_right//m[1] # 不能转int或Integer型，不然结果为0，不知道为什么，很奇怪
# print(int(left),int(right))
#
#
from Crypto.Util.number import long_to_bytes

print(long_to_bytes(1537511878348658386025)+long_to_bytes(543689197014958751245437))