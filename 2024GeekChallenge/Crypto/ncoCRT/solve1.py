import hashlib
from functools import reduce
from Crypto.Util.number import *
from gmpy2 import *
from sympy.ntheory.modular import *

ms = [207867980504656835313307696396607264603, 245036212212570610987366430554968489325,
      270836744824069537438646110613439698666, 319275775495422875474878625752594133023,
      254268823435329877199449670714528712873, 213093607196415232366564484229844568444,
      246921085368773491003187313772615702950]
cs = [150031581047390726903711035932621949276, 21260202376534810598778595491323328519,
      144049733622518360270048059408969512643, 236920143187836025924037873968303507493,
      99781504248790469459151935530031893836, 69236016568483424294966410179787943383,
      20613188366058016717435734248097940419]
x=crt(ms,cs)[0]
klcm=lcm(ms[0],ms[1])
for i in range(5):
    klcm=lcm(klcm,ms[i+2])
k=1
while True:
    s = hashlib.sha256(long_to_bytes(x+k*klcm)).hexdigest()
    if "6a651" == s[:5]:
        print(f"SYC{{{s}}}")
    k+=1
