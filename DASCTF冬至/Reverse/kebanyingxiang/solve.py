import struct
from ctypes import c_uint32


def xtea_encrypt(r, v, key):
    v0, v1 = c_uint32(v[0]), c_uint32(v[1])
    delta = 0x61C88647
    total = c_uint32(0)
    for i in range(r):
        v0.value += (((v1.value << 4) ^ (v1.value >> 5)) + v1.value) ^ (total.value + key[total.value & 3])
        total.value -= delta
        v1.value += (((v0.value << 4) ^ (v0.value >> 5)) + v0.value) ^ (total.value + key[(total.value >> 11) & 3])
    return v0.value, v1.value

def xtea_decrypt(r, v, key):
    v0, v1 = c_uint32(v[0]), c_uint32(v[1])
    delta = 0x61C88647
    total = c_uint32(-delta * r)
    for i in range(r):
        v1.value -= (((v0.value << 4) ^ (v0.value >> 5)) + v0.value) ^ (total.value + key[(total.value >> 11) & 3])
        total.value += delta
        v0.value -= (((v1.value << 4) ^ (v1.value >> 5)) + v1.value) ^ (total.value + key[total.value & 3])
    return v0.value, v1.value

def xxtea_decrypt(n, v, key):
    # 全部转为c_unit32格式
    v = [c_uint32(i) for i in v]
    r = 6 + 52 // n
    v0 = v[0].value
    delta = 0x11451419
    total = c_uint32(delta * r)
    for i in range(r):
        e = (total.value >> 2) & 3
        for j in range(n-1, 0, -1):
            v1 = v[j-1].value
            v[j].value -= ((((v1 >> 5) ^ (v0 << 2)) + ((v0 >> 3) ^ (v1 << 4))) ^ ((total.value ^ v0) + (key[(j & 3) ^ e] ^ v1)))
            v0 = v[j].value
        v1 = v[n-1].value
        v[0].value -= ((((v1 >> 5) ^ (v0 << 2)) + ((v0 >> 3) ^ (v1 << 4))) ^ ((total.value ^ v0) + (key[(0 & 3) ^ e] ^ v1)))
        v0 = v[0].value
        total.value -= delta
    return [i.value for i in v]


xxtea_xor = [0x8f, 0x6c, 0xa6, 0x3f, 0x94, 0x3d, 0xf5, 0xd9, 0x36, 0x66, 0x51, 0xd7, 0x66, 0x2f, 0xb3, 0x8f, 0xc0, 0x61, 0x9e, 0xce, 0xe9, 0xd7, 0xe1, 0xbf, 0x13, 0x14, 0x16, 0x14, 0xc2, 0xe7, 0xc3, 0x3a, 0x7f, 0x94, 0xa1, 0xe7, 0x24, 0xe, 0xa7, 0x5c, 0xd3, 0x77, 0xfe, 0x4f, 0x11, 0xdc, 0x69, 0x23]
v = [0x18, 0x09, 0x1C, 0x14, 0x37, 0x1D, 0x16, 0x2D, 0x3C, 0x05, 0x16, 0x3E, 0x02, 0x03, 0x10, 0x2C, 0x0E, 0x31, 0x39, 0x15, 0x04, 0x3A, 0x39, 0x03, 0x0D, 0x13, 0x2B, 0x3E, 0x06, 0x08, 0x37, 0x00, 0x17, 0x0B, 0x00, 0x1D, 0x1C, 0x00, 0x16, 0x06, 0x07, 0x17, 0x30, 0x03, 0x30, 0x06, 0x0A, 0x71, 0xC2, 0x39, 0x3F, 0xF7, 0xEB, 0x24, 0x94, 0x4D, 0x99, 0x41, 0x7E, 0xFC, 0x41, 0x79, 0xAB, 0xC8, 0x5E, 0xD0, 0x3B, 0xD7, 0x85, 0x63, 0xD3, 0x1D, 0xCB, 0x98, 0x5A, 0x06, 0x21, 0x8B, 0xA3, 0xD8, 0xE3, 0x86, 0x1A, 0x37, 0x4A, 0x8A, 0x5C, 0xD2, 0x53, 0xCB, 0x14, 0x3C, 0x89, 0xEB, 0x71, 0xEB][:48]
for i in range(48):
    v[i] ^= xxtea_xor[i]
k = b"{What_is_this_?}"
k = [struct.unpack("<I", k[i:i+4])[0] for i in range(0, 16, 4)]
v = [struct.unpack("<I", bytes(v[i:i+4]))[0] for i in range(0, len(v), 4)]
v = xxtea_decrypt(len(v), v, k)
tmp_v = []
for i in range(len(v)):
    tmp_v += list(struct.pack('<I', v[i]))

xtea_xor = [0xDA, 0x30, 0x23, 0xE3, 0xDC, 0x39, 0x82, 0x60, 0xA5, 0x44, 0x68, 0xC2, 0x43, 0x7A, 0xBB, 0xE4, 0x50, 0xE1, 0x02, 0xC2, 0x81, 0x59, 0xEA, 0x1E, 0xC6, 0x8B, 0x71, 0x38, 0x27, 0x83, 0x94, 0xD8, 0xF4, 0x8D, 0x1A, 0x2A, 0x56, 0x8A, 0x4A, 0xD4, 0x54, 0xDC, 0x24, 0x3F, 0xB9, 0xED, 0x7B, 0x9A]
for i in range(48):
    tmp_v[i] = tmp_v[i] ^ xtea_xor[i]
v = [struct.unpack("<I", bytes(tmp_v[i:i+4]))[0] for i in range(0, len(tmp_v), 4)]
k = b"{you_find_it_!?}"
k = [struct.unpack("<I", k[i:i+4])[0] for i in range(0, 16, 4)]
for i in range(0, len(v), 2):
    v[i:i+2] = xtea_decrypt(32, v[i:i+2], k)
str_list = []
for i in range(len(v)):
    str_list += list(struct.pack('<I', v[i]))

key = b"Laughter_is_poison_to_fear"
for i in range(len(str_list)):
    str_list[i] ^= key[i%26]
print("".join(map(chr, str_list)))
