c = [0x44, 0x7C, 0x43, 0x72, 0x1D, 0x72, 0x74, 0x41, 0x05, 0x14, 0x19, 0x1A, 0x19, 0x0F, 0xF5, 0x10, 0xAE, 0x18, 0x6D, 0x01, 0x10, 0x56, 0x00, 0x1E, 0x26, 0x71, 0x65, 0x73, 0x78, 0x72, 0xEB, 0x72, 0x52, 0x06, 0xAA, 0xBB, 0xA3, 0xA4, 0x1B, 0xFC, 0xC7, 0x82]


def bubble_sort(arr):
    n = len(arr)
    # 遍历所有数组元素
    for i in range(n):
        swapped = False  # 优化：标记本轮是否有交换
        # 最后i个元素已排好序，无需再比较
        for j in range(0, n - i - 1):
            # 如果当前元素大于下一个元素，则交换
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swapped = True
        # 如果本轮无交换，说明已完全有序，提前终止
        if not swapped:
            break
    return arr

# 示例
arr = [0x2030, 0x3040, 0x4050, 0x1022, 0x2011, 0x1666, 0x1522, 0x8899, 0x4155, 0x4044, 0x4288, 0x3321, 0x6033, 0xFFFF, 0x2221, 0x3366, 0x222C, 0x2CCC, 0x22CC, 0xCC22, 0xC2C2]
xor = bubble_sort(arr)
for i in range(0, 42, 2):
    print(chr(c[i]^(xor[i//2]&0xff)), end="")
    print(chr(c[i+1]^(xor[i//2]>>8)), end="")
