from z3 import *

s = Solver()
v = [BitVec(f"v{i}", 8) for i in range(23)]
s.add(253 * v[22]
     + 299 * v[21]
     + 88 * v[20]
     + 323 * v[19]
     + 764 * v[18]
     + 349 * v[17]
     + 758 * v[16]
     + 233 * v[15]
     + 255 * v[14]
     + 343 * v[13]
     + 613 * v[12]
     + 629 * v[11]
     + 596 * v[10]
     + 183 * v[9]
     + 43 * v[8]
     + 482 * v[7]
     + 771 * v[6]
     + 42 * v[5]
     + 244 * v[4]
     + 651 * v[3] == 403332)
s.add(25 * v[22]
     + 436 * v[21]
     + 937 * v[20]
     + 664 * v[19]
     + 792 * v[18]
     + 49 * v[17]
     + 738 * v[16]
     + 953 * v[15]
     + 133 * v[14]
     + 677 * v[13]
     + 744 * v[12]
     + 15 * v[11]
     + 34 * v[10]
     + 956 * v[9]
     + 759 * v[8]
     + 26 * v[7]
     + 147 * v[6]
     + 618 * v[5]
     + 721 * v[4]
     + 672 * v[3] == 440518)
s.add(547 * v[22]
     + 781 * v[21]
     + 562 * v[20]
     + 809 * v[19]
     + 481 * v[18]
     + 619 * v[17]
     + 200 * v[16]
     + 91 * v[15]
     + 23 * v[14]
     + 254 * v[13]
     + 641 * v[12]
     + 984 * v[11]
     + 477 * v[10]
     + 877 * v[9]
     + 277 * v[8]
     + 831 * v[7]
     + 325 * v[6]
     + 383 * v[5]
     + 446 * v[4]
     + 606 * v[3] == 423549)
s.add(393 * v[22]
     + 653 * v[21]
     + 813 * v[20]
     + 227 * v[19]
     + 46 * v[18]
     + 989 * v[17]
     + 293 * v[16]
     + 110 * v[15]
     + 124 * v[14]
     + 548 * v[13]
     + 830 * v[12]
     + 900 * v[11]
     + 886 * v[10]
     + 322 * v[9]
     + 963 * v[8]
     + 212 * v[7]
     + 944 * v[6]
     + 876 * v[5]
     + 792 * v[4]
     + 861 * v[3] == 505857)
s.add(53 * v[22]
     + 316 * v[21]
     + 679 * v[20]
     + 266 * v[19]
     + 885 * v[18]
     + 814 * v[17]
     + 568 * v[16]
     + 351 * v[15]
     + 623 * v[14]
     + 984 * v[13]
     + 832 * v[12]
     + 257 * v[11]
     + 341 * v[10]
     + 30 * v[9]
     + 467 * v[8]
     + 475 * v[7]
     + 604 * v[6]
     + 653 * v[5]
     + 1003 * v[4]
     + 359 * v[3] == 438956)
s.add(347 * v[22]
     + 706 * v[21]
     + 66 * v[20]
     + 777 * v[19]
     + 588 * v[18]
     + 830 * v[17]
     + 263 * v[16]
     + 595 * v[15]
     + 663 * v[14]
     + 597 * v[13]
     + 905 * v[12]
     + 415 * v[11]
     + 2 * v[10]
     + 911 * v[9]
     + 693 * v[8]
     + 959 * v[7]
     + 493 * v[6]
     + 567 * v[5]
     + 759 * v[4]
     + 478 * v[3] == 464591)
s.add(174 * v[22]
     + 80 * v[21]
     + 770 * v[20]
     + 834 * v[19]
     + 802 * v[18]
     + 732 * v[17]
     + 695 * v[16]
     + 6 * v[15]
     + 794 * v[14]
     + 666 * v[13]
     + 319 * v[12]
     + 276 * v[11]
     + 60 * v[10]
     + 962 * v[9]
     + 519 * v[8]
     + 551 * v[7]
     + 856 * v[6]
     + 521 * v[5]
     + 341 * v[4]
     + 972 * v[3] == 518258)
s.add(529 * v[22]
     + 394 * v[21]
     + 660 * v[20]
     + 920 * v[19]
     + 18 * v[18]
     + 889 * v[17]
     + 82 * v[16]
     + 815 * v[15]
     + 100 * v[14]
     + 243 * v[13]
     + 657 * v[12]
     + 353 * v[11]
     + 575 * v[10]
     + 65 * v[9]
     + 367 * v[8]
     + 161 * v[7]
     + 314 * v[6]
     + 503 * v[5]
     + 881 * v[4]
     + 764 * v[3] == 344071)
s.add(124 * v[22]
     + 773 * v[21]
     + 262 * v[20]
     + 961 * v[19]
     + 491 * v[18]
     + 815 * v[17]
     + 238 * v[16]
     + 1005 * v[15]
     + 796 * v[14]
     + 998 * v[13]
     + 500 * v[12]
     + 888 * v[11]
     + 658 * v[10]
     + 835 * v[9]
     + 639 * v[8]
     + 698 * v[7]
     + 213 * v[6]
     + 134 * v[5]
     + 514 * v[4]
     + 604 * v[3] == 476880)
s.add(834 * v[22]
     + 817 * v[21]
     + 384 * v[20]
     + 408 * v[19]
     + 855 * v[18]
     + 979 * v[17]
     + 136 * v[16]
     + 715 * v[15]
     + 446 * v[14]
     + 2 * v[13]
     + 38 * v[12]
     + 505 * v[11]
     + 837 * v[10]
     + 202 * v[9]
     + 331 * v[8]
     + 726 * v[7]
     + 658 * v[6]
     + 752 * v[5]
     + 560 * v[4]
     + 752 * v[3] == 380573)
s.add(923 * v[22]
     + 274 * v[21]
     + 664 * v[20]
     + 871 * v[19]
     + 801 * v[18]
     + 208 * v[17]
     + 862 * v[16]
     + 722 * v[15]
     + 966 * v[14]
     + 457 * v[13]
     + 568 * v[12]
     + 373 * v[11]
     + 726 * v[10]
     + 563 * v[9]
     + 939 * v[8]
     + 649 * v[7]
     + 694 * v[6]
     + 989 * v[5]
     + 85 * v[4]
     + 159 * v[3] == 533871)
s.add(645 * v[22]
     + 200 * v[21]
     + 155 * v[20]
     + 121 * v[19]
     + 275 * v[18]
     + 515 * v[17]
     + 278 * v[16]
     + 303 * v[15]
     + 513 * v[14]
     + 975 * v[13]
     + 781 * v[12]
     + 600 * v[11]
     + 625 * v[10]
     + 965 * v[9]
     + 162 * v[8]
     + 713 * v[7]
     + 346 * v[6]
     + 510 * v[5]
     + 4 * v[4]
     + 532 * v[3] == 426093)
s.add(382 * v[22]
     + 18 * v[21]
     + 935 * v[20]
     + 594 * v[19]
     + 812 * v[18]
     + 757 * v[17]
     + 174 * v[16]
     + 301 * v[15]
     + 43 * v[14]
     + 413 * v[13]
     + 578 * v[12]
     + 38 * v[11]
     + 998 * v[10]
     + 363 * v[9]
     + 445 * v[8]
     + 22 * v[7]
     + 764 * v[6]
     + 538 * v[5]
     + 381 * v[4]
     + 423 * v[3] == 356277)
s.add(129 * v[22]
     + 421 * v[21]
     + 185 * v[20]
     + 68 * v[19]
     + 354 * v[18]
     + 539 * v[17]
     + 484 * v[16]
     + 247 * v[15]
     + 238 * v[14]
     + 365 * v[13]
     + 205 * v[12]
     + 723 * v[11]
     + 516 * v[10]
     + 426 * v[9]
     + 6 * v[8]
     + 203 * v[7]
     + 203 * v[6]
     + 615 * v[5]
     + 568 * v[4]
     + 535 * v[3] == 303854)
s.add(677 * v[22]
     + 52 * v[21]
     + 422 * v[20]
     + 282 * v[19]
     + 188 * v[18]
     + 366 * v[17]
     + 53 * v[16]
     + 222 * v[15]
     + 199 * v[14]
     + 252 * v[13]
     + 103 * v[12]
     + 755 * v[11]
     + 704 * v[10]
     + 944 * v[9]
     + 580 * v[8]
     + 649 * v[7]
     + 912 * v[6]
     + 213 * v[5]
     + 755 * v[4]
     + 369 * v[3] == 348552)
s.add(360 * v[22]
     + 977 * v[21]
     + 341 * v[20]
     + 417 * v[19]
     + 488 * v[18]
     + 928 * v[17]
     + 281 * v[16]
     + 80 * v[15]
     + 380 * v[14]
     + 605 * v[13]
     + 293 * v[12]
     + 779 * v[11]
     + 749 * v[10]
     + 138 * v[9]
     + 104 * v[8]
     + 247 * v[7]
     + 19 * v[6]
     + 706 * v[5]
     + 963 * v[4]
     + 173 * v[3] == 308804)
s.add(954 * v[22]
     + 530 * v[21]
     + 247 * v[20]
     + 926 * v[19]
     + 244 * v[18]
     + 2 * v[17]
     + 723 * v[16]
     + 139 * v[15]
     + 751 * v[14]
     + 22 * v[13]
     + 580 * v[12]
     + 159 * v[11]
     + 162 * v[10]
     + 21 * v[9]
     + 645 * v[8]
     + 975 * v[7]
     + 860 * v[6]
     + 966 * v[5]
     + 912 * v[4]
     + 744 * v[3] == 476778)
s.add(851 * v[22]
     + 929 * v[21]
     + 883 * v[20]
     + 690 * v[19]
     + 602 * v[18]
     + 672 * v[17]
     + 799 * v[16]
     + 996 * v[15]
     + 123 * v[14]
     + 849 * v[13]
     + 67 * v[12]
     + 901 * v[11]
     + 365 * v[10]
     + 612 * v[9]
     + 255 * v[8]
     + 886 * v[7]
     + 101 * v[6]
     + 241 * v[5]
     + 337 * v[4]
     + 979 * v[3] == 501272)
s.add(92 * v[22]
     + 719 * v[21]
     + 799 * v[20]
     + 799 * v[19]
     + 416 * v[18]
     + 296 * v[17]
     + 141 * v[16]
     + 211 * v[15]
     + 336 * v[14]
     + 865 * v[13]
     + 450 * v[12]
     + 938 * v[11]
     + 296 * v[10]
     + 618 * v[9]
     + 117 * v[8]
     + 595 * v[7]
     + 659 * v[6]
     + 461 * v[5]
     + 841 * v[4]
     + 933 * v[3] == 470235)
s.add(418 * v[22]
     + 937 * v[21]
     + 929 * v[20]
     + 419 * v[19]
     + 487 * v[18]
     + 985 * v[17]
     + 565 * v[16]
     + 601 * v[15]
     + 918 * v[14]
     + 293 * v[13]
     + 25 * v[12]
     + 593 * v[11]
     + 519 * v[10]
     + 301 * v[9]
     + 404 * v[8]
     + 719 * v[7]
     + 747 * v[6]
     + 108 * v[5]
     + 1001 * v[4]
     + 389 * v[3] == 395149)

if s.check() == sat:
    ans = s.model()
    out = []
    for i in v:
        try:
            out.append(ans[i].as_long())
        except:
            continue
    print(out)
    d = [0x000000AF, 0x0000004B, 0x00000081, 0x00000087, 0x00000077, 0x0000006B, 0x000000A2, 0x00000062, 0x000000A3, 0x000000AD, 0x00000073, 0x0000008F, 0x0000006C, 0x00000095, 0x00000033, 0x00000053, 0x000000A3, 0x0000004A, 0x00000066, 0x00000094, 0x000000D4, 0x0000003D, 0x0000008B, 0x00000079, 0x00000082, 0x00000092, 0x0000005B, 0x0000008D, 0x000000AC, 0x000000BA, 0x000000B1, 0x00000051, 0x0000006F, 0x00000091, 0x00000048, 0x0000008F, 0x0000004E, 0x00000094]
    flag = ""
    for i in range(38):
        flag += chr(d[i]-out[i%20])
    print(flag)